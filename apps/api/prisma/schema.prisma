generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  workspaces Workspace[]
  
  @@map("users")
}

model Workspace {
  id        String    @id @default(uuid())
  name      String
  ownerId   String
  owner     User      @relation(fields: [ownerId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  projects Project[]
  assets   Asset[]
  
  @@map("workspaces")
}

model Project {
  id         String    @id @default(uuid())
  workspaceId String
  workspace  Workspace @relation(fields: [workspaceId], references: [id])
  name       String
  domain     String?
  published  Boolean   @default(false)
  publishedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  
  pages    Page[]
  publishes Publish[]
  
  @@map("projects")
}

model Page {
  id         String    @id @default(uuid())
  projectId  String
  project    Project   @relation(fields: [projectId], references: [id])
  name       String
  slug       String
  tree       Json
  isTemplate Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  
  revisions Revision[]
  
  @@map("pages")
}

model Revision {
  id        String   @id @default(uuid())
  pageId    String
  page      Page     @relation(fields: [pageId], references: [id])
  tree      Json
  createdAt DateTime @default(now())
  
  @@map("revisions")
}

model Asset {
  id          String    @id @default(uuid())
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  filename    String
  url         String
  type        String
  size        Int
  createdAt   DateTime  @default(now())
  
  @@map("assets")
}

model Publish {
  id         String    @id @default(uuid())
  projectId  String
  project    Project   @relation(fields: [projectId], references: [id])
  status     String    @default("pending")
  url        String?
  createdAt  DateTime  @default(now())
  completedAt DateTime?
  
  @@map("publishes")
}

